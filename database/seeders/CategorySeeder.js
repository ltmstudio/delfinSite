const { PrismaClient } = require('../../src/generated/prisma/client');

const prisma = new PrismaClient();

/**
 * Category Seeder
 * –°–æ–∑–¥–∞–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤ (–∫–∞–∫ –≤ Laravel)
 */
async function seedCategories() {
  console.log('üå± –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...');
  
  const categories = [
    {
      name: '–°–º–µ—Å–∏—Ç–µ–ª–∏',
      description: '–°–º–µ—Å–∏—Ç–µ–ª–∏ –¥–ª—è –≤–∞–Ω–Ω–æ–π –∏ –∫—É—Ö–Ω–∏',
      imageUrl: '/category_banners/smesitel_banner.jpg'
    },
    {
      name: '–£–Ω–∏—Ç–∞–∑—ã', 
      description: '–£–Ω–∏—Ç–∞–∑—ã –∏ –±–∏–¥–µ',
      imageUrl: '/category_banners/toilet_category.png'
    },
    {
      name: '–ö–æ—Ç–ª—ã',
      description: '–û—Ç–æ–ø–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ—Ç–ª—ã', 
      imageUrl: '/category_banners/boiler_category.png'
    }
  ];

  for (const categoryData of categories) {
    const existing = await prisma.category.findFirst({
      where: { name: categoryData.name }
    });

    if (!existing) {
      await prisma.category.create({
        data: categoryData
      });
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: ${categoryData.name}`);
    } else {
      console.log(`‚ÑπÔ∏è  –ö–∞—Ç–µ–≥–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${categoryData.name}`);
    }
  }
}

async function main() {
  try {
    await seedCategories();
    console.log('üéâ CategorySeeder –∑–∞–≤–µ—Ä—à–µ–Ω!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ CategorySeeder:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  main();
}

module.exports = { seedCategories };
