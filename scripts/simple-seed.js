const mysql = require('mysql2/promise');

async function main() {
  console.log('üöÄ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
  
  try {
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const connection = await mysql.createConnection({
      host: 'localhost',
      user: 'root',
      password: '',
      database: 'delfinsite'
    });

    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ');

    // –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const categories = [
      ['–°–º–µ—Å–∏—Ç–µ–ª–∏', '–°–º–µ—Å–∏—Ç–µ–ª–∏ –¥–ª—è –≤–∞–Ω–Ω–æ–π –∏ –∫—É—Ö–Ω–∏', '/category_banners/smesitel_banner.jpg'],
      ['–£–Ω–∏—Ç–∞–∑—ã', '–£–Ω–∏—Ç–∞–∑—ã –∏ –±–∏–¥–µ', '/category_banners/toilet_category.png'],
      ['–ö–æ—Ç–ª—ã', '–û—Ç–æ–ø–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ—Ç–ª—ã', '/category_banners/boiler_category.png']
    ];

    for (const [name, description, imageUrl] of categories) {
      const [existing] = await connection.execute(
        'SELECT id FROM categories WHERE name = ?',
        [name]
      );

      if (existing.length === 0) {
        await connection.execute(
          'INSERT INTO categories (name, description, imageUrl, isActive, createdAt, updatedAt) VALUES (?, ?, ?, ?, NOW(), NOW())',
          [name, description, imageUrl, true]
        );
        console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: ${name}`);
      } else {
        console.log(`‚ÑπÔ∏è  –ö–∞—Ç–µ–≥–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${name}`);
      }
    }

    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã
    const products = [
      ['–°–º–µ—Å–∏—Ç–µ–ª—å –¥–ª—è —Ä–∞–∫–æ–≤–∏–Ω—ã 8609', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–º–µ—Å–∏—Ç–µ–ª—å —Å –ø–æ–≤–æ—Ä–æ—Ç–Ω—ã–º –∏–∑–ª–∏–≤–æ–º', '–°–º–µ—Å–∏—Ç–µ–ª–∏', 15000, '/products/washdown_rimless/8609.png'],
      ['–°–º–µ—Å–∏—Ç–µ–ª—å –¥–ª—è —Ä–∞–∫–æ–≤–∏–Ω—ã 8614', '–≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–π —Å–º–µ—Å–∏—Ç–µ–ª—å —Å –≤—ã—Å–æ–∫–∏–º –∏–∑–ª–∏–≤–æ–º', '–°–º–µ—Å–∏—Ç–µ–ª–∏', 18000, '/products/washdown_rimless/8614.png'],
      ['–£–Ω–∏—Ç–∞–∑ –ø–æ–¥–≤–µ—Å–Ω–æ–π 9000', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø–æ–¥–≤–µ—Å–Ω–æ–π —É–Ω–∏—Ç–∞–∑', '–£–Ω–∏—Ç–∞–∑—ã', 45000, '/products/washdown_rimless/9000.png'],
      ['–£–Ω–∏—Ç–∞–∑ –Ω–∞–ø–æ–ª—å–Ω—ã–π 9001', '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –Ω–∞–ø–æ–ª—å–Ω—ã–π —É–Ω–∏—Ç–∞–∑', '–£–Ω–∏—Ç–∞–∑—ã', 35000, '/products/washdown_rimless/9001.jpg'],
      ['–ö–æ—Ç–µ–ª –≥–∞–∑–æ–≤—ã–π 25 –∫–í—Ç', '–≠–Ω–µ—Ä–≥–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –≥–∞–∑–æ–≤—ã–π –∫–æ—Ç–µ–ª', '–ö–æ—Ç–ª—ã', 120000, '/products/boiler_hero.png']
    ];

    for (const [name, description, category, price, imageUrl] of products) {
      const [existing] = await connection.execute(
        'SELECT id FROM products WHERE name = ?',
        [name]
      );

      if (existing.length === 0) {
        await connection.execute(
          'INSERT INTO products (name, description, category, price, imageUrl, isActive, createdAt, updatedAt) VALUES (?, ?, ?, ?, ?, ?, NOW(), NOW())',
          [name, description, category, price, imageUrl, true]
        );
        console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –ø—Ä–æ–¥—É–∫—Ç: ${name}`);
      } else {
        console.log(`‚ÑπÔ∏è  –ü—Ä–æ–¥—É–∫—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${name}`);
      }
    }

    await connection.end();
    console.log('üéâ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

main();
