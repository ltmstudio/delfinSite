const mysql = require('mysql2/promise');

async function main() {
  console.log('üì¶ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö delfinsite\n');
  
  try {
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const connection = await mysql.createConnection({
      host: 'localhost',
      user: 'root',
      password: '',
      database: 'delfinsite'
    });

    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ\n');

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    console.log('üìÇ –ö–ê–¢–ï–ì–û–†–ò–ò:');
    console.log('='.repeat(50));
    const [categories] = await connection.execute('SELECT * FROM categories ORDER BY id');
    categories.forEach(cat => {
      console.log(`ID: ${cat.id}`);
      console.log(`–ù–∞–∑–≤–∞–Ω–∏–µ: ${cat.name}`);
      console.log(`–û–ø–∏—Å–∞–Ω–∏–µ: ${cat.description}`);
      console.log(`–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${cat.imageUrl}`);
      console.log(`–ê–∫—Ç–∏–≤–Ω–∞: ${cat.isActive ? '–î–∞' : '–ù–µ—Ç'}`);
      console.log(`–°–æ–∑–¥–∞–Ω–∞: ${cat.createdAt}`);
      console.log('-'.repeat(30));
    });

    console.log('\n');

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã
    console.log('üõçÔ∏è  –¢–û–í–ê–†–´:');
    console.log('='.repeat(50));
    const [products] = await connection.execute('SELECT * FROM products ORDER BY id');
    products.forEach(prod => {
      console.log(`ID: ${prod.id}`);
      console.log(`–ù–∞–∑–≤–∞–Ω–∏–µ: ${prod.name}`);
      console.log(`–û–ø–∏—Å–∞–Ω–∏–µ: ${prod.description}`);
      console.log(`–ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${prod.category}`);
      console.log(`–¶–µ–Ω–∞: ${prod.price ? prod.price + ' —Ä—É–±.' : '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}`);
      console.log(`–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${prod.imageUrl}`);
      console.log(`–ê–∫—Ç–∏–≤–µ–Ω: ${prod.isActive ? '–î–∞' : '–ù–µ—Ç'}`);
      console.log(`–°–æ–∑–¥–∞–Ω: ${prod.createdAt}`);
      console.log('-'.repeat(30));
    });

    await connection.end();
    console.log('\nüéâ –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

main();
